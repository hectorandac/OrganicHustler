<style>
  .paging_crt {
    float: left;
    width: 40px;
    height: 40px;
    font-size: 34px;
    background: #e1e1e1;
    padding: 3px;
    line-height: 34px;
    text-align: center;
    cursor: pointer;
    margin: 10px 0 10px 10px;
  }

  .pink-p {
    background: #b592a2;
    color: white;
  }

</style>

<div class="mobilenot" style="height: 30px">
</div>
<div id="items-container" style="overflow: hidden; margin-bottom: 30px">

  <div style="z-index: 0;" id="filters">

    <hr class="desktopnot" style="float: left; width: 100%; margin: 0 auto">
    <!-- Large button group -->
    <div class="btn-group filter-element">
      <button id="button_for_drop" style="font-weight: bold" class="btn btn-default btn-enlarge btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Style
        <span style="right: 0; position: absolute; padding: 5px"><i class="fa fa-caret-down" aria-hidden="true"></i></span>
      </button>
      <ul id="style-list-filter" class="dropdown-menu drop-enlarge">
        <li style="padding-top: 7px; padding-bottom: 7px" onclick="filters.style = ''; load_items(1);" class="selectable">
          <h5>Clear selection</h5></li>
      </ul>
    </div>

    <hr class="desktopnot" style="float: left; width: 100%; margin: 0 auto">

    <!-- Large button group -->
    <div class="btn-group filter-element">
      <button style="font-weight: bold" class="btn btn-default btn-enlarge btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Colors
        <span style="right: 0; position: absolute; padding: 5px"><i class="fa fa-caret-down" aria-hidden="true"></i></span>
      </button>
      <ul id="color-list-filter" class="dropdown-menu drop-enlarge">
        <li style="padding-top: 7px; padding-bottom: 7px" onclick="filters.color = ''; load_items(1);" class="selectable">
          <h5>Clear selection</h5></li>
      </ul>
    </div>

    <hr class="desktopnot" style="float: left; width: 100%; margin: 0 auto">

    <!-- Large button group -->
    <div class="btn-group filter-element">
      <button style="font-weight: bold" class="btn btn-default btn-enlarge btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Material
        <span style="right: 0; position: absolute; padding: 5px"><i class="fa fa-caret-down" aria-hidden="true"></i></span>
      </button>
      <ul id="material-list-filter" class="dropdown-menu drop-enlarge">
        <li style="padding-top: 7px; padding-bottom: 7px" onclick="filters.material = ''; load_items(1);" class="selectable">
          <h5>Clear selection</h5></li>
      </ul>
    </div>

    <hr class="desktopnot" style="float: left; width: 100%; margin: 0 auto">

    <div class="filter-element mobilenot"><h5 id="product_counter" style="font-weight: bold">0 products found</h5></div>
  </div>

  <div id="items" style="min-height: 370px">

  </div>

</div>

<div id="pages" style="overflow: hidden">

</div>

<script>

    (function ($) {
        $.fn.removeStyle = function (style) {
            var search = new RegExp(style + '[^;]+;?', 'g');

            return this.each(function () {
                $(this).attr('style', function (i, style) {
                    return style && style.replace(search, '');
                });
            });
        };
    }(jQuery));

    var id_preset_temp = null;

    var first_style = document.getElementById('style-list-filter').cloneNode(true);
    var first_material = document.getElementById('material-list-filter').cloneNode(true);
    var first_color = document.getElementById('color-list-filter').cloneNode(true);

    var contains = function (needle) {
        // Per spec, the way to identify NaN is that it is not equal to itself
        var findNaN = needle !== needle;
        var indexOf;

        if (!findNaN && typeof Array.prototype.indexOf === 'function') {
            indexOf = Array.prototype.indexOf;
        } else {
            indexOf = function (needle) {
                var i = -1, index = -1;

                for (i = 0; i < this.length; i++) {
                    var item = this[i];

                    if ((findNaN && item !== item) || item === needle) {
                        index = i;
                        break;
                    }
                }

                return index;
            };
        }

        return indexOf.call(this, needle) > -1;
    };

    var filters = {
        style: '',
        color: '',
        material: ''
    };

    var filters_arr = {
        style: [],
        color: [],
        material: [],
        remove: function () {
            this.style = [];
            this.color = [];
            this.material = [];
        }
    };

    function add_filter(value, title, type) {
        switch (type) {
            case 0:
                if (!contains.call(filters_arr.style, value)) {
                    if (filters.style === value.toString()) {
                        $('#style-list-filter').append('<li style="padding-top: 7px; padding-bottom: 7px" onclick="filters.style = \'' + value + '\'; load_items(1);" class="selectable selected0f"><h5>' + title + '</h5></li>');
                    } else {
                        $('#style-list-filter').append('<li style="padding-top: 7px; padding-bottom: 7px" onclick="filters.style = \'' + value + '\'; load_items(1);" class="selectable"><h5>' + title + '</h5></li>');
                    }
                    filters_arr.style.push(value);
                }
                break;
            case 1:
                if (!contains.call(filters_arr.color, value)) {
                    if (filters.color === value.toString()) {
                        $('#color-list-filter').append('<li style="padding-top: 7px; padding-bottom: 7px" onclick="filters.color = \'' + value + '\'; load_items(1);" class="selectable selected0f"><h5>' + title + '</h5></li>');
                    } else {
                        $('#color-list-filter').append('<li style="padding-top: 7px; padding-bottom: 7px" onclick="filters.color = \'' + value + '\'; load_items(1);" class="selectable"><h5>' + title + '</h5></li>');
                    }
                    filters_arr.color.push(value);
                }
                break;
            case 2:
                if (!contains.call(filters_arr.material, value)) {
                    if (filters.material === value.toString()) {
                        $('#material-list-filter').append('<li style="padding-top: 7px; padding-bottom: 7px" onclick="filters.material = \'' + value + '\'; load_items(1);" class="selectable selected0f"><h5>' + title + '</h5></li>');
                    } else {
                        $('#material-list-filter').append('<li style="padding-top: 7px; padding-bottom: 7px" onclick="filters.material = \'' + value + '\'; load_items(1);" class="selectable"><h5>' + title + '</h5></li>');
                    }
                    filters_arr.material.push(value);
                }
                break;
        }
    }

    function load_items(page) {

        document.getElementById('style-list-filter').outerHTML = first_style.outerHTML;
        document.getElementById('material-list-filter').outerHTML = first_material.outerHTML;
        document.getElementById('color-list-filter').outerHTML = first_color.outerHTML;
        filters_arr.remove();

        $.ajax({
            url: '/catalog/items?page='+ page +'&category=' + '<%= @parameters['view'] %>&style=' + filters.style + '&color=' + filters.color + '&material=' + filters.material + '&search=<%= @parameters['search'] %>',
            type: 'GET',
            dataType: 'json',
            data: {},
            success: function (data) {
                var n_p = data['t']['FOUND_ROWS()'];
                var n_button_pag = Math.ceil(n_p / 12);

                var page_crts = document.getElementById('pages');
                page_crts.innerHTML = '';
                for (var we = 0; we < n_button_pag; we++){
                    page_crts.innerHTML = page_crts.innerHTML + '<div onclick="load_items(' + (we + 1) + ')" class="text_light paging_crt '+ (((we + 1) === page) ? 'pink-p' : '') +' ">' + (we + 1) +  '</div>';
                }

                data = data['ps'];

                var html_items = '';
                document.getElementById('product_counter').innerHTML = n_p + ' products found';
                for (var id in data) {
                    var item = data[id];
                    html_items = html_items + '<div class="catalog-item" id="item' + item.id + '">' +
                        '<div onclick="open_quick(\'' + item.id + '\', 1)">'
                        + '<img alt="Product image" id="item_img_' + item.id + '" class="img-con-item" style="margin-bottom: 10px" src="' + item.product_image_id + '">'
                        + '<h5 class="text-uppercase text_light" style="font-size: 16px; margin-bottom: 10px">' + item.title + '</h5>'
                        + '<h5 style="font-size: 16px; color: #ba97a6; font-family: CaviarDream, Helvetica, sans-serif; font-weight: 600">$' + parseFloat(Math.round(item.price * 100) / 100).toFixed(2) + '</h5>' +
                        '</div>'
                        + '<button onclick="open_quick(\'' + item.id + '\', 1)" class="btn btn-sp btn-bottom_fixed" style="width: 100%">Quick Shop</button>'
                        + '</div>';
                    document.getElementById('items').innerHTML = html_items;

                    $.ajax({
                        url: '/catalog/product/colors?product_id=' + data[id].id,
                        type: 'GET',
                        dataType: 'json',
                        data: {},
                        success: function (data) {
                            for (var i = 0; i < data.length; i++) {
                                add_filter(data[i].title, data[i].title, 1);
                            }
                        }
                    });
                    $.ajax({
                        url: '/catalog/product/styles?id=' + data[id].id,
                        type: 'GET',
                        dataType: 'json',
                        data: {},
                        success: function (data) {
                            for (var i = 0; i < data.length; i++) {
                                add_filter(data[i].id, data[i].title, 0);
                            }
                        }
                    });
                    $.ajax({
                        url: '/catalog/product/materials?id=' + data[id].id,
                        type: 'GET',
                        dataType: 'json',
                        data: {},
                        success: function (data) {
                            for (var i = 0; i < data.length; i++) {
                                add_filter(data[i].id, data[i].title, 2);
                            }
                            window.scrollTo(0, 0);
                        }
                    });

                }
            },
            error: function (data) {

            }
        });
    }

    load_items(1);

</script>
