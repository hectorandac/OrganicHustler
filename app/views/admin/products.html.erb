<script>
    const items = [];
</script>

<body style="background-color: #dedede">
<div class="main">

  <div class="table_search card">
    <div class="input-group">
      <span class="input-group-addon" id="basic-addon2">ID</span>
      <label for="id"></label>
      <input type="text" class="form-control" aria-describedby="basic-addon2" id="id_input" name="id_input">
    </div>

    <div class="input-group">
      <span class="input-group-addon" id="basic-addon2">SKU</span>
      <label for="sku"></label>
      <input type="text" class="form-control" aria-describedby="basic-addon2" id="sku" name="sku">
    </div>

    <div class="input-group">
      <span class="input-group-addon">Title</span>
      <label for="title"></label><input type="text" class="form-control" aria-describedby="basic-addon1" id="title" name="title">
    </div>

    <div class="input-group">
      <span class="input-group-addon">Less than</span>
      <label for="amount"></label><input type="number" step="any" min="0" class="form-control" aria-label="Amount (to the nearest dollar)" id="amount" name="amount">
      <span class="input-group-addon">$</span>
    </div>

    <div class="input-group">
      <span class="input-group-addon" id="basic-addon2">Category</span>
      <label for="category"></label>
      <select class="form-control" id="category" name="category">

      </select>
    </div>

    <script>

        $.ajax({
            url: '/admin/all_categories',
            type: 'GET',
            dataType: 'json',
            data: {},
            success: function (data) {
                var category_side = document.getElementById('category');
                var text = '<option value="">All categories</option>';
                for (var i = 0; i < data.length; i++) {
                    text = text + '<option value="' + data[i]['id'] + '">' + data[i]['title'] + '</option>';
                }
                category_side.innerHTML = text;
            },
            error: function (data) {

            }
        });

    </script>

    <button class="btn btn-primary" onclick="loadTable()" style="width: 100%" type="button">Search</button>
  </div>
  <div class="table_buttons card">
    <button type="button" class="btn btn-success" onclick="window.location.href='/admin/products/new'">New product
    </button>
    <button type="button" class="btn btn-info" onclick="show_selection()">Info</button>
    <button type="button" class="btn btn-warning" onclick="edit_selection()">Edit</button>
    <button type="button" class="btn btn-danger" onclick="delete_selection_np()" >DELETE</button>
  </div>

  <div class="table_products card">
    <table class="table" id="table">
      <thead>
      <tr>
        <th></th>
        <th><i class="fa fa-picture-o" aria-hidden="true"></i></th>
        <th onclick="sort_title()" class="header-ele">Title</th>
        <th onclick="sort_inventory()" class="header-ele">Inventory</th>
        <th onclick="sort_category()" class="header-ele">Category</th>
        <th onclick="sort_price()" class="header-ele">Price $</th>
      </tr>
      </thead>
      <tbody id="list-to-m">

      </tbody>
    </table>
    <script>

        $.ajax({
            url: '/admin/all_products',
            type: 'GET',
            dataType: 'json',
            data: {},
            success: function (data) {
                var table_body = document.getElementById('list-to-m');
                var text = '';
                for (var i = 0; i < data.length; i++) {
                    console.log(data[i]);

                    var background_color = (data[i]['status'] ? 'white' : '#ff8787');

                    text = text + '<tr id="product-row" style="background: '+ background_color +'">\n' +
                        '            <td>\n' +
                        '              <input id="select-obj" type="checkbox" name="select-obj" autocomplete="off" onclick="add_item(this, \'' + data[i]['id'] + '\')">\n' +
                        '            </td>\n' +
                        '            <td>\n' +
                        '                  <span id="img-thumb" style="width: 50px" class="thumbnail"><img src="' + data[i]['product_image_id'] + '"></span>\n' +
                        '            </td>\n' +
                        '            <td>' + data[i]['title'] + '</td>\n' +
                        '            <td>' + data[i]['stock'] + '</td>\n' +
                        '            <td>' + data[i]['categories_l'] + '</td>\n' +
                        '            <td class="price" style="text-align: right">' + data[i]['price'] + '</td>\n' +
                        '          </tr>'
                }
                table_body.innerHTML = text;
            },
            error: function (data) {

            }
        });

        function loadTable() {
            $.ajax({
                url: '/admin/all_products',
                type: 'GET',
                dataType: 'json',
                data: {
                    id: document.getElementById('id_input').value,
                    sku: document.getElementById('sku').value,
                    title: document.getElementById('title').value,
                    amount: document.getElementById('amount').value,
                    category: document.getElementById('category').value
                },
                success: function (data) {
                    var table_body = document.getElementById('list-to-m');
                    var text = '';
                    for (var i = 0; i < data.length; i++) {
                        console.log(data[i]);
                        text = text + '<tr id="product-row">\n' +
                            '            <td>\n' +
                            '              <input id="select-obj" type="checkbox" name="select-obj" autocomplete="off" onclick="add_item(this, \'' + data[i]['id'] + '\')">\n' +
                            '            </td>\n' +
                            '            <td>\n' +
                            '                  <span id="img-thumb" style="width: 50px" class="thumbnail"><img src="' + data[i]['product_image_id'] + '"></span>\n' +
                            '            </td>\n' +
                            '            <td>' + data[i]['title'] + '</td>\n' +
                            '            <td>' + data[i]['stock'] + '</td>\n' +
                            '            <td>' + data[i]['categories_l'] + '</td>\n' +
                            '            <td class="price" style="text-align: right">' + data[i]['price'] + '</td>\n' +
                            '          </tr>'
                    }
                    table_body.innerHTML = text;
                },
                error: function (data) {

                }
            });
        }

        function add_item(box, product) {
            if (box.checked && ($.inArray(product, items) === -1))
                items.push(product);
            else
                items.splice(items.lastIndexOf(product), 1);
            console.log(items);
        }

    </script>
    <script>

        var title_sort = true;
        var inventory_sort = true;
        var category_sort = true;
        var price_sort = true;

        function sort_title() {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("table");
            switching = true;
          /*Make a loop that will continue until
           no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.getElementsByTagName("tr");
              /*Loop through all table rows (except the
               first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                  /*Get the two elements you want to compare,
                   one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("td")[2];
                    y = rows[i + 1].getElementsByTagName("td")[2];
                    //check if the two rows should switch place:
                    if ((x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) && title_sort) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    } else if ((x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) && !title_sort) {
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                  /*If a switch has been marked, make the switch
                   and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                }
            }

            title_sort = !title_sort;
        }
        function sort_inventory() {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("table");
            switching = true;
          /*Make a loop that will continue until
           no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.getElementsByTagName("tr");
              /*Loop through all table rows (except the
               first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                  /*Get the two elements you want to compare,
                   one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("td")[3];
                    y = rows[i + 1].getElementsByTagName("td")[3];
                    //check if the two rows should switch place:
                    if ((parseFloat(x.innerHTML) > parseFloat(y.innerHTML)) && inventory_sort) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    } else if ((parseFloat(x.innerHTML) < parseFloat(y.innerHTML)) && !inventory_sort) {
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                  /*If a switch has been marked, make the switch
                   and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                }
            }

            inventory_sort = !inventory_sort;
        }

        function sort_category() {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("table");
            switching = true;
          /*Make a loop that will continue until
           no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.getElementsByTagName("tr");
              /*Loop through all table rows (except the
               first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                  /*Get the two elements you want to compare,
                   one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("td")[2];
                    y = rows[i + 1].getElementsByTagName("td")[2];
                    //check if the two rows should switch place:
                    if ((x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) && category_sort) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    } else if ((x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) && !category_sort) {
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                  /*If a switch has been marked, make the switch
                   and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                }
            }

            category_sort = !category_sort;
        }

        function sort_price() {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("table");
            switching = true;
          /*Make a loop that will continue until
           no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.getElementsByTagName("tr");
              /*Loop through all table rows (except the
               first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                  /*Get the two elements you want to compare,
                   one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("td")[5];
                    y = rows[i + 1].getElementsByTagName("td")[5];
                    //check if the two rows should switch place:
                    if ((parseFloat(x.innerHTML) > parseFloat(y.innerHTML)) && price_sort) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    } else if ((parseFloat(x.innerHTML) < parseFloat(y.innerHTML)) && !price_sort) {
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                  /*If a switch has been marked, make the switch
                   and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                }
            }

            price_sort = !price_sort;
        }

        $('*[class*=price]:visible').each(function () {
            var amount = $(this).html();
            var i = parseFloat(amount);
            if (isNaN(i)) {
                i = 0.00;
            }
            var minus = '';
            if (i < 0) {
                minus = '-';
            }
            i = Math.abs(i);
            i = parseInt((i + .005) * 100);
            i = i / 100;
            var s = String(i);
            if (s.indexOf('.') < 0) {
                s += '.00';
            }
            if (s.indexOf('.') === (s.length - 2)) {
                s += '0';
            }
            s = minus + s;
            $(this).html(s);
        });

        function show_selection() {
            for (var i = 0; i < items.length; i++) {
                window.open('/admin/product/' + items[i]);
            }
        }

        function edit_selection() {
            for (var i = 0; i < items.length; i++) {
                window.open('/admin/product/edit/' + items[i]);
            }
        }

        function delete_selection_np() {
            var j = 0;
            var k = items.length;

            for (var i = 0; i < items.length; i++) {
                $.ajax({
                    url: '/product',
                    method: 'delete',
                    data: {
                        pro_id: items[i],
                        permanent: false
                    },
                    dataType: 'json',
                    success: function (data) {
                        j = j + 1;
                        if (j === k) {
                            window.location.href = '/admin/products';
                        }
                    },
                    error: function (data) {
                        console.log(data)
                    }
                });
            }
        }

        function delete_selection_p() {
            var j = 0;
            var k = items.length;

            for (var i = 0; i < items.length; i++) {
                $.ajax({
                    url: '/product',
                    method: 'delete',
                    data: {
                        pro_id: items[i],
                        permanent: true
                    },
                    dataType: 'json',
                    success: function (data) {
                        j = j + 1;
                        if (j === k) {
                            window.location.href = '/admin/products';
                        }
                    },
                    error: function (data) {
                        console.log(data)
                    }
                });
            }
        }
    </script>
  </div>
</div>
</body>