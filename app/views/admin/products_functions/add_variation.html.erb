<nav class="navbar navbar-inverse sidebar" role="navigation">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-sidebar-navbar-collapse-1">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="/">Organic Hustler</a>
    </div>
    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-sidebar-navbar-collapse-1">
      <ul class="nav navbar-nav">
        <li>
          <a href="/admin/home">Home<span style="font-size:16px;" class="pull-right hidden-xs show opacity fa fa-home"></span></a>
        </li>
        <li class="active">
          <a href="/admin/products">Products<span style="font-size:16px;" class="pull-right hidden-xs show opacity fa fa-product-hunt"></span></a>
        </li>
        <li>
          <a href="/admin/logos">Logos<span style="font-size:16px;" class="pull-right hidden-xs show opacity fa fa-picture-o"></span></a>
        </li>
        <li>
          <a href="/admin/orders">Orders<span style="font-size:16px;" class="pull-right hidden-xs show opacity fa fa-truck"></span></a>
        </li>
      </ul>
    </div>
  </div>
</nav>
<body style="background-color: #dedede">

<div class="center-div">
  <div class="card notification-ask" style="background: #ffffff">
    <h3>Add variation</h3>
    <hr>
    <div style="text-align: left">
      <%= form_tag "/admin/add_variation/#{@product_id}", :name => 'addVariationForm', :method => :post do %>
          <div style="height: 30px; margin: 10px">
            <div class="form-group">
              <label class="col-md-3" for="modifier">Modifier: </label>
              <select class="col-md-7" name="modifier" id="modifier">
                <% @modifiers.each do |mod| %>
                    <option value='<%= mod[0] %>'><%= mod[1]['title'] %></option>
                <% end %>
              </select>
            </div>
          </div>
          <div id="variable-form" style="margin-left: auto; margin-right: auto;">
          </div>

          <button type="submit" style="width: 100%; margin-top: 10px" class="btn btn-primary">ADD</button>

          <script>
          </script>

          <script>
              $(document).ready(function () {
                  $(document).on('change', "#modifier", function () {
                      var variable_form = $('#variable-form');
                      switch ($(this).prop('selectedIndex')) {
                          case 0:
                              variable_form.html('<input id="pic" type="file" name="pic" accept="image/*">' +
                                  '<div id="container" style="width: 100%; height: 400px">' +
                                  '</div>');

                          function update(activeAnchor) {
                              var group = activeAnchor.getParent();
                              var topLeft = group.get('.topLeft')[0];
                              var topRight = group.get('.topRight')[0];
                              var bottomRight = group.get('.bottomRight')[0];
                              var bottomLeft = group.get('.bottomLeft')[0];
                              var image = group.get('Image')[0];
                              var anchorX = activeAnchor.getX();
                              var anchorY = activeAnchor.getY();
                              // update anchor positions
                              switch (activeAnchor.getName()) {
                                  case 'topLeft':
                                      topRight.setY(anchorY);
                                      bottomLeft.setX(anchorX);
                                      break;
                                  case 'topRight':
                                      topLeft.setY(anchorY);
                                      bottomRight.setX(anchorX);
                                      break;
                                  case 'bottomRight':
                                      bottomLeft.setY(anchorY);
                                      topRight.setX(anchorX);
                                      break;
                                  case 'bottomLeft':
                                      bottomRight.setY(anchorY);
                                      topLeft.setX(anchorX);
                                      break;
                              }
                              image.position(topLeft.position());
                              var width = topRight.getX() - topLeft.getX();
                              var height = bottomLeft.getY() - topLeft.getY();
                              if (width && height) {
                                  image.width(width);
                                  image.height(height);
                              }
                          }

                          function addAnchor(group, x, y, name) {
                              var stage = group.getStage();
                              var layer = group.getLayer();
                              var anchor = new Konva.Circle({
                                  x: x,
                                  y: y,
                                  stroke: '#666',
                                  fill: '#ddd',
                                  strokeWidth: 2,
                                  radius: 8,
                                  name: name,
                                  draggable: true,
                                  dragOnTop: false
                              });
                              anchor.on('dragmove', function () {
                                  update(this);
                                  layer.draw();
                              });
                              anchor.on('mousedown touchstart', function () {
                                  group.setDraggable(false);
                                  this.moveToTop();
                              });
                              anchor.on('dragend', function () {
                                  group.setDraggable(true);
                                  layer.draw();
                              });
                              // add hover styling
                              anchor.on('mouseover', function () {
                                  var layer = this.getLayer();
                                  document.body.style.cursor = 'pointer';
                                  this.setStrokeWidth(4);
                                  layer.draw();
                              });
                              anchor.on('mouseout', function () {
                                  var layer = this.getLayer();
                                  document.body.style.cursor = 'default';
                                  this.setStrokeWidth(2);
                                  layer.draw();
                              });
                              group.add(anchor);
                          }

                              var container = $('#container');
                              container.height(container.width());

                              var stage = new Konva.Stage({
                                  container: 'container',
                                  width: container.width(),
                                  height: container.height()
                              });
                              var layer = new Konva.Layer();
                              stage.add(layer);

                              var baseImg = new Konva.Image({
                                  width: container.width(),
                                  height: container.height(),
                                  draggable: false
                              });

                              var logoImg = new Konva.Image({
                                  width: 100,
                                  height: 100
                              });

                              var logoGroup = new Konva.Group({
                                  x: 100,
                                  y: 100,
                                  draggable: true
                              });

                              layer.add(baseImg);
                              layer.add(logoGroup);
                              logoGroup.add(logoImg);

                              addAnchor(logoGroup, 0, 0, 'topLeft');
                              addAnchor(logoGroup, 100, 0, 'topRight');
                              addAnchor(logoGroup, 100, 100, 'bottomRight');
                              addAnchor(logoGroup, 0, 100, 'bottomLeft');

                              var imageObj1 = new Image();
                              imageObj1.onload = function () {
                                  baseImg.image(imageObj1);
                                  layer.draw();
                              };
                              imageObj1.src = '<%= AdminHelper.get_product_by_id(@product_id)['images'][0]['url']['https'] %>';

                              var imageObj2 = new Image();
                              imageObj2.onload = function () {
                                  logoImg.image(imageObj2);
                                  layer.draw();
                              };

                              var pic = $('#pic');
                              pic.change(function () {

                                  alert('ssss');
                                  var reader = new FileReader();
                                  reader.onload = function (e) {

                                      imageObj2.src = e.target.result;
                                      layer.draw();

                                  };
                                  reader.readAsDataURL(document.getElementById('pic').files[0]);
                              });

                              layer.draw();

                              break;
                          case 1:
                              variable_form.html('<div class="form-group"> <label class="col-md-3" for="changes">Size: </label><input class="col-md-7" type="text" id="changes" name="changes"></div><div class="form-group"><label class="col-md-3" for="changes">Price mod: </label><select class="col-md-2" name="sign"><option value="+">+</option><option value="+">-</option><option value="+">=</option></select><input class="col-md-5" type="text" id="price_mod" name="price_mod"></div>');
                              break;
                          case 2:
                              variable_form.html('<div class="form-group"> <label class="col-md-3" for="changes">Color: </label><input class="col-md-7" type="text" id="changes" name="changes"></div><div class="form-group"><label class="col-md-3" for="changes">Price mod: </label><select class="col-md-2" name="sign"><option value="+">+</option><option value="+">-</option><option value="+">=</option></select><input class="col-md-5" type="text" id="price_mod" name="price_mod"></div>');
                              break;
                      }
                  });
              });

          </script>

      <% end %>

    </div>
  </div>
</div>
</body>