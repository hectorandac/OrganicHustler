<% tax_array = [] %>
<% cost_array = [] %>
<div class="desktopnot" style="margin-top: -50px"></div>
<div class="mobilenot" style="margin-top: 50px"></div>
<script src="https://js.stripe.com/v3/"></script>
<%= stylesheet_link_tag 'cart' %>
<div style="overflow: hidden; margin: 0 7%;">
  <%= form_tag '/checkout', method: :post, id: 'payment-form' do |f| %>
      <div class="content-part field-data">

        <% user = get_user_toc %>

        <div class="content-part content-part-10 field-data">
          <label>
            <div>CHECKOUT DETAILS</div>
          </label>
          <input name="cardholder-email" class="field" placeholder="user@domain.com" value="<%= user['email'] %>" required>
        </div>

        <div class="content-part content-part-10">
          <hr>
        </div>

        <h3>SHIPPING ADDRESS</h3>

        <div class="content-part field-data">
          <label>
            <div>FIRST NAME</div>
          </label>
          <input name="cardholder-first-name" class="field" placeholder="Jane Doe" value="<%= user['user_name'] %>" required>
        </div>

        <div class="content-part field-data">
          <label>
            <div>LAST NAME</div>
          </label>
          <input name="cardholder-last-name" class="field" placeholder="Acosta Pozo" value="<%= user['user_last_name'] %>" required>
        </div>

        <% address = user.user_address || {} %>

        <div class="content-part content-part-10 field-data">
          <label>
            <div>STREET ADDRESS</div>
          </label>
          <input name="cardholder-street" class="field" placeholder="Vergel #31" value="<%= address['street_address'] %>" required>
        </div>

        <div class="content-part content-part-3 field-data content-part-10">
          <label>
            <div>CITY</div>
          </label>
          <input name="cardholder-city" class="field" placeholder="Santo Domingo" value="<%= address['city'] %>" required>
        </div>

        <div class="content-part content-part-3 field-data content-part-5">
          <label>
            <div>STATE</div>
          </label>
          <input name="cardholder-state" class="field" placeholder="DN" value="<%= address['state'] %>" required>
        </div>

        <div class="content-part content-part-3 field-data content-part-5">
          <label>
            <div>ZIP CODE</div>
          </label>
          <input name="cardholder-zip" class="field" placeholder="10107" value="<%= address['zip_code'] %>" required>
        </div>

        <div class="content-part content-part-10 field-data">
          <label>
            <div>PHONE NUMBER</div>
          </label>
          <input id="phone" name="cardholder-number" pattern="[\(]\d{3}[\)][\-]\d{3}[\-]\d{4}" class="field" placeholder="(123)-456-7890" type="tel" value="<%= address['number'] %>" required>
        </div>

        <div class="content-part content-part-10">
          <hr>
        </div>

        <h3>PAYMENT OPTIONS</h3>

        <% if !@card %>
        <label>
          <span>Card</span>
        </label>
            <div id="card-element" style="padding: 0 0 0 10px" class="field content-part content-part-10 field-data card-element"></div>

            <% if user_signed_in? %>
                <input type="checkbox" name="save_cr">Save credit-card<br>
            <% end %>
        <% else %>
            <label>
              <span>Card</span>
            </label>
            <div class="field content-part content-part-10" disabled="true">
              XXXX XXXX XXXX <%= @card['last4'] %> <span style="float: right; margin-right: 50px">XXX</span>
              <span style="float: right; margin-right: 50px"><%= @card['exp_month'] %>/<%= @card['exp_year'] %></span>
            </div>
        <% end %>

        <div class="content-part content-part-10">
          <hr>
        </div>

        <h3>GIFT OPTIONS</h3>

        <div class="content-part content-part-10">
          <hr>
        </div>

        <h3>PROMOTION CODE</h3>

        <div class="content-part content-part-10 desktopnot">
          <hr>
        </div>

      </div>
      <div style="position: relative" class="content-part preview-cart content-part-10">

        <div id="loading" class="hidden">

          <div class="loader">

          </div>

        </div>

        <div style="padding: 10px">


          <script>
              var Stage = {};
          </script>

        <h4><span><%= get_item_count %></span> Items</h4>
        <hr>
        <% CartProduct.where(cart_id: get_cart_id).each do |product| %>
              <% product_temp = get_product_l(product.product_id) %>
            <div class="item-checkout" style="margin-bottom: 20px">
              <div style="float: left; width: 33%; position: relative">
                <div id="cart<%= product.id %>" style="width: 100%; height: 100%; margin-left: auto; margin-right: auto;"></div>
              </div>
              <div style="float: right; width: 63%; position: relative">
                <h4><%= product_temp['title'] %></h4>
                <div style="float: left; width: 50%">
                  <h6>Size: <%= (Size.find product.size_id).title %></h6>
                  <h6>Customized:
                    <% if product.has_emblem %>YES
                    <% elsif product.has_logo %>YES
                    <% else %>NO
                    <% end %></h6>
                  <h6>Color: <%= (Color.find product.color_id).title %></h6>
                </div>
                <div style="float: left; width: 50%; text-align: center">
                  <h3>Qty: 1</h3> <!-- Attach to backend -->
                  <% pr_price = product_price(product.id) %>
                  <h4><%= format('$%.2f',pr_price[5]) %></h4>
                  <% tax_array.push(pr_price[1]) %>
                  <% cost_array.push(pr_price[5]) %>
                </div>
              </div>
            </div>

              <script id="create-shape">

                  var stageWidth = 500;
                  var stageHeight = 500;

                  createShape('cart<%= product.id %>', null, null, null, null, null, '<%= product.color_id %>');

                  function createShape(id, multiplexer, x, y, s_w, s_h, color_id, logo_id, emblem_id) {
                      var container = $('#' + id);
                      container.height(container.width());

                      var stage = new Konva.Stage({
                          container: id,
                          width: stageWidth,
                          height: stageHeight
                      });
                      var layer = new Konva.Layer();
                      stage.add(layer);

                      Stage[id] = stage;

                      var baseImg = new Konva.Image({
                          width: stageWidth,
                          height: stageHeight,
                          draggable: false
                      });
                      layer.add(baseImg);

                      var imageObj1 = new Image();
                      imageObj1.onload = function () {
                          baseImg.image(imageObj1);
                          layer.draw();
                      };

                      $.ajax({
                          url: '/catalog/product/color/main_image?color_id=' + color_id,
                          type: 'GET',
                          dataType: 'json',
                          data: {},
                          success: function (data) {
                              imageObj1.src = data.picture
                          },
                          error: function (data) {
                              console.log(data);
                          }
                      });

                      /*var logoImg = new Konva.Image({
                          x: stageWidth * x / s_w,
                          y: stageHeight * y / s_h
                      });
                      layer.add(logoImg);

                      var imageObj2 = new Image();
                      imageObj2.onload = function () {
                          logoImg.image(imageObj2);
                          logoImg.scale({
                              x: stageWidth * multiplexer / s_w,
                              y: stageHeight * multiplexer / s_h
                          });
                          layer.draw();
                      };

                      if (logo_id !== null) {
                          $.ajax({
                              url: '/catalog/product/logo?logo_id=' + logo_id,
                              type: 'GET',
                              dataType: 'text',
                              data: {},
                              success: function (data) {
                                  imageObj2.src = data
                              },
                              error: function (data) {
                                  console.log(data);
                              }
                          });
                      }

                      var emblem = new Konva.Image({
                          x: 0,
                          y: 0
                      });
                      layer.add(emblem);

                      var imageEmblem = new Image();
                      imageEmblem.onload = function () {
                          emblem.image(imageEmblem);
                          emblem.setWidth(this.width);
                          emblem.setHeight(this.height);
                          layer.draw();
                      };

                      if (emblem_id !== null) {


                          $.ajax({
                              url: '/catalog/product/emblem?emblem_id=' + emblem_id,
                              type: 'GET',
                              dataType: 'json',
                              data: {},
                              success: function (data) {
                                  emblem.setX(stageWidth * data.x / 500);
                                  emblem.setY(stageWidth * data.y / 500);
                                  emblem.scale({
                                      x: stageWidth * data.multiplexer / 500,
                                      y: stageWidth * data.multiplexer / 500
                                  });
                                  imageEmblem.src = data.src;

                              },
                              error: function (data) {
                                  console.log(data);
                              }
                          });
                      }*/

                      layer.draw();
                  }

                  function fitStageIntoParentContainer_we() {
                      var container = $('#cart<%= product.id %>');
                      container.height(container.width());

                      // now we need to fit stage into parent
                      var containerWidth = container.width();
                      // to do this we need to scale the stage
                      var scale = containerWidth / stageWidth;
                      Stage['cart<%= product.id %>'].scale({x: scale, y: scale});
                      Stage['cart<%= product.id %>'].draw();
                  }

                  fitStageIntoParentContainer_we();
                  // adapt the stage on any window resize
                  window.addEventListener('resize', fitStageIntoParentContainer_we);

              </script>

        <% end %>

        <h3>ORDER DETAILS</h3>
        <hr>
        <div style="overflow: hidden; margin: 5px">
          <% cost_t = 0 %>
          <% cost_array.each do |cost| %>
              <% cost_t = cost_t + cost %>
          <% end %>
          <h4 class="t-right">Subtotal</h4><h4 class="s-left"><%= format('$%.2f', cost_t) %></h4>
        </div>

        <div style="overflow: hidden; margin: 5px">
          <h4 class="t-right">Shipping</h4><h4 class="s-left">(Free US)</h4>
        </div>

        <div style="overflow: hidden; margin: 5px">
          <% tax_t = 0 %>
          <% tax_array.each do |tax| %>
              <% tax_t = tax_t + tax %>
          <% end %>
          <h4 class="t-right">Estimated Tax</h4><h4 class="s-left"><%= format("$%.2f", tax_t) %></h4>
        </div>

        <div style="overflow: hidden; margin: 40px 5px 5px;">
          <h4 class="t-right">Estimated total</h4>
          <h3 style="font-weight: lighter;" class="s-left"><%= format("$%.2f", tax_t + cost_t) %></h3>
        </div>

        <hr>

        <input type="checkbox"> I agree to the terms and conditions.

        <button class="btn btn-sp" type="submit">Pay <%= format("$%.2f", tax_t + cost_t) %></button>
        <div class="outcome">
          <div id="error_hand"></div>
        </div>
        </div>
      </div>
  <% end %>
</div>

<script>

    var phone_field = $("#phone");
    phone_field.on("change keyup paste", function () {
        var output;
        var input = phone_field.val();
        input = input.replace(/[^0-9]/g, '');
        var area = input.substr(0, 3);
        var pre = input.substr(3, 3);
        var tel = input.substr(6, 4);
        if (area.length < 3) {
            output = "(" + area;
        } else if (area.length == 3 && pre.length < 3) {
            output = "(" + area + ")" + "-" + pre;
        } else if (area.length == 3 && pre.length == 3) {
            output = "(" + area + ")" + "-" + pre + "-" + tel;
        }
        phone_field.val(output);
    });

    var stripe = Stripe('pk_test_v1i9VQN3G18s8aYbnwi9Mqim');
    var elements = stripe.elements();

    var card = elements.create('card', {
        style: {
            base: {
                iconColor: '#666EE8',
                color: '#31325F',
                lineHeight: '50px',
                fontWeight: 300,
                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                fontSize: '15px',

                '::placeholder': {
                    color: '#70726C'
                }
            }
        }
    });
    var element_dd = $('#card-element');
    if (element_dd.length) {
        card.mount('#card-element');
    }

    function setOutcome(result) {

        var error_h = document.getElementById('error_hand');
        if (result.token) {

            document.getElementById('loading').classList.remove('hidden');

            // get all the inputs into an array.
            var $inputs = $('#payment-form').find(':input');

            // not sure if you wanted this, but I thought I'd add it.
            // get an associative array of just the values.
            var values = {};
            $inputs.each(function () {
                values[this.name] = $(this).val();
            });
            values['token'] = result.token;

            $.ajax(
                {
                    url: '/checkout',
                    method: 'post',
                    datType: 'json',
                    data: values,
                    success: function (data) {
                        console.log(data);
                        if (data['paid']) {
                            document.getElementById('loading').innerHTML = '<i class="fa fa-check" style="font-size: 160px; align-self: center; color: #89c13e" aria-hidden="true"></i>';
                            if (<%= user_signed_in? %>) {
                                location.href = '/account';
                            } else {
                                location.href = '/temp_user_act'
                            }
                        } else if (data['sign']) {
                            location.href = '/users/sign_in?tu=' + data['temp_user_id'];
                            document.getElementById('loading').classList.add('hidden');
                        } else {

                            var message = {
                                invalid_number: 'The card number is not a valid credit card number.',
                                invalid_expiry_month: 'The card\'s expiration month is invalid.',
                                invalid_expiry_year: 'The card\'s expiration year is invalid.',
                                invalid_cvc: 'The card\'s security code is invalid.',
                                invalid_swipe_data: 'The card\'s swipe data is invalid.',
                                incorrect_number: 'The card number is incorrect.',
                                expired_card: 'The card has expired.',
                                incorrect_cvc: 'The card\'s security code is incorrect.',
                                incorrect_zip: 'The card\'s zip code failed validation.',
                                card_declined: 'The card was declined.',
                                missing: 'There is no card on a customer that is being charged.',
                                processing_error: 'An error occurred while processing the card.'
                            };

                            document.getElementById('loading').classList.add('hidden');
                            error_h.innerHTML = '<div class="error_message"><h6>' + message[data['code']] + '</h6></div>';
                        }
                    },
                    error: function () {
                        document.getElementById('loading').classList.add('hidden');
                    }
                }
            );

        } else if (result.error) {
            error_h.innerHTML = '<div class="error_message"><h6>' + result.error.message + '</h6></div>';
            error_h.classList.add('visible');
        }
    }

    card.on('change', function (event) {
        setOutcome(event);
    });

    document.querySelector('form').addEventListener('submit', function (e) {
        e.preventDefault();
        if (element_dd.length) {
            var form = document.querySelector('form');
            var extraDetails = {
                name: form.querySelector('input[name=cardholder-first-name]').value
            };
            stripe.createToken(card, extraDetails).then(setOutcome);
        } else {
            var result = {};
            result.token = 'none';
            setOutcome(result);
        }
    });
</script>